C51 COMPILER V9.52.0.0   USER_SHT30                                                        02/24/2021 22:36:07 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE USER_SHT30
OBJECT MODULE PLACED IN User_SHT30.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE APP\User_SHT30.c COMPACT BROWSE INCDIR(.\mcu_sdk) DEBUG OBJECTEXTEND PRINT(
                    -.\User_SHT30.lst) OBJECT(User_SHT30.obj)

line level    source

   1          /******************************************************************************
   2          文件名称: User_SHT30.c
   3          文件标识: STC8A8K64S4A12
   4          摘    要: SHT30操作函数
   5          当前版本: V1.0.1        （增加crc校验出错后初始化sht30）
   6          完成日期: 2021.02.09
   7          *******************************************************************************/
   8          #define USER_SHT30_GLOBALS
   9          //#include "include.h"
  10          #include "wifi.h"
  11          #include "init.h" 
  12          #include "myiic.h"
  13          #include "User_SHT30.h"
  14          #include <stdio.h>
  15          #define SHT30_Address 0x88
  16          TYPE_BUFFER_S FlashBuffer;
  17          
  18          //#define SendACK() 
  19          void Start(void)
  20          {
  21   1              IIC_Start();
  22   1      }
  23          void Stop(void)
  24          {
  25   1              IIC_Stop();
  26   1      }
  27          void SendData(uint8 i)
  28          {
  29   1              IIC_Send_Byte(i);
  30   1      }
  31          void SendACK(void)
  32          {
  33   1              IIC_Ack();
  34   1      }
  35          uint8 RecvData(void)
  36          {
  37   1              
  38   1              return(IIC_Read_Byte(0));
  39   1      }
  40          /*****************************************************************************
  41          函数名称 : SHT_Init
  42          功能描述 : SHT30初始化
  43          输入参数 : 无
  44          返回参数 : 无
  45          使用说明 : 无
  46          *****************************************************************************/
  47          void SHT_Init()
  48          {
  49   1              Start();
  50   1              SendData(SHT30_Address);
  51   1        SendACK();
  52   1              SendData((uint8)(PERIODIC_MODE_10S>>8));//设置周期模式
  53   1        SendACK();
  54   1              SendData((uint8)PERIODIC_MODE_10S);
C51 COMPILER V9.52.0.0   USER_SHT30                                                        02/24/2021 22:36:07 PAGE 2   

  55   1        SendACK();
  56   1              Stop();
  57   1      }
  58          /*****************************************************************************
  59          函数名称 : sht_crc
  60          功能描述 : crc-8校验
  61          输入参数 : 无
  62          返回参数 : 无
  63          使用说明 : 无
  64          *****************************************************************************/ 
  65          uint8_t sht_crc(uint8_t *shtdata, uint8_t count)
  66          {
  67   1              uint8_t crc_bit;        // bit mask
  68   1              uint8_t crc = 0xFF;     // calculated checksum
  69   1              uint8_t byteCtr;        // byte counter
  70   1              
  71   1        // calculates 8-Bit checksum with given polynomial
  72   1              for(byteCtr = 0; byteCtr < count; ++byteCtr)
  73   1              {
  74   2                      crc ^= (shtdata[byteCtr]);
  75   2                      for(crc_bit = 8; crc_bit > 0; --crc_bit) //crc校验，最高位是1就^0x31
  76   2                      {
  77   3                              if(crc & 0x80)
  78   3                                      crc = (crc << 1) ^ 0x31;
  79   3                              else
  80   3                                crc = (crc << 1);
  81   3                      }
  82   2              }
  83   1              return crc;
  84   1      }
  85          /*****************************************************************************
  86          函数名称 : sht30_read
  87          功能描述 : SHT30数据读取，通过oled显示
  88          输入参数 : 无
  89          返回参数 : 无
  90          使用说明 : 无
  91          *****************************************************************************/
  92          void sht30_read()
  93          {
  94   1              uint8_t result[10];
  95   1              uint16_t St;     //传感器的温度原始值
  96   1        uint16_t Srh;    //传感器的湿度原始值
  97   1              //uint16_t e;      //计算出的水汽压
  98   1              //signed int T;
  99   1              //int AT;
 100   1              
 101   1              Start();
 102   1              SendData(SHT30_Address);
 103   1        SendACK();
 104   1              SendData(0xe0);
 105   1        SendACK();
 106   1              SendData(0x00);
 107   1        SendACK();
 108   1              
 109   1              Start();   //开始读数据
 110   1              SendData(SHT30_Address+1);
 111   1              SendACK();
 112   1        result[0] = RecvData();  //读到的数据暂存在result数组里
 113   1              SendACK();
 114   1              result[1] = RecvData();
 115   1              SendACK();
 116   1              result[2] = RecvData();
C51 COMPILER V9.52.0.0   USER_SHT30                                                        02/24/2021 22:36:07 PAGE 3   

 117   1              SendACK();
 118   1              result[3] = RecvData();
 119   1              SendACK();
 120   1              result[4] = RecvData();
 121   1              SendACK();
 122   1              result[5] = RecvData();
 123   1              Stop();
 124   1              
 125   1              if((sht_crc(result, 2)==result[2]) && (sht_crc(result+3, 2)==result[5]))//crc校验
 126   1              {
 127   2                      St = (result[0]<<8) | result[1];  //温度拼接
 128   2                      Srh = (result[3]<<8) | result[4]; //湿度拼接
 129   2                      FlashBuffer.temper = (-450+1750*(1.0*St/65535));  //10倍实际温度，上报需要
 130   2                      //T = FlashBuffer.temper/10;                      //温度计算
 131   2                      FlashBuffer.humidity = 100*(1.0*Srh/65535);         //湿度计算
 132   2                      //e = (FlashBuffer.humidity/100)*6.105*exp(17.27*T/(237.7+T));//水气压计算
 133   2                      //AT = 1.07*T+0.2*e-2.7;            //体感温度计算
 134   2                      
 135   2                      mcu_dp_value_update(DPID_TEMP_CURRENT,FlashBuffer.temper);     //VALUE型数据上报;
 136   2                      mcu_dp_value_update(DPID_HUMIDITY_VALUE,FlashBuffer.humidity); //VALUE型数据上报;
 137   2                      
 138   2                      
 139   2                      /* OLED_ShowNum(32,4,T,2,16);   //显示温度
 140   2                      if(T>0)
 141   2                              OLED_ShowChar(48,4,'`',16);
 142   2                      else
 143   2                              OLED_ShowChar(56,4,'`',16);
 144   2                      
 145   2                      OLED_ShowNum(104,4,FlashBuffer.humidity,2,16);  //显示湿度
 146   2                      OLED_ShowChar(120,4,'%',16);
 147   2                      
 148   2                      OLED_ShowNum(64,6,AT,2,16);  //显示体感温度
 149   2                      if(AT>0)
 150   2                              OLED_ShowChar(80,6,'`',16);
 151   2                      else
 152   2                              OLED_ShowChar(88,6,'`',16); */
 153   2              }
 154   1              else  //校验失败
 155   1              {
 156   2                      //OLED_ShowStr(32,4,"error",16);  //显示错误
 157   2                      SHT_Init();                     //初始化
 158   2              }
 159   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    412    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =      3      16
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
